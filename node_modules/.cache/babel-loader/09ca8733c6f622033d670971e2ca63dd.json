{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\repo-improv-main\\\\repo-improv-main\\\\src\\\\route\\\\List.jsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItem from '@mui/material/ListItem';\nimport List from '@mui/material/List';\nimport Divider from '@mui/material/Divider';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Slide from '@mui/material/Slide';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Transition = /*#__PURE__*/React.forwardRef(_c = function Transition(props, ref) {\n  return /*#__PURE__*/_jsxDEV(Slide, {\n    direction: \"up\",\n    ref: ref,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 10\n  }, this);\n});\n_c2 = Transition;\nconst columns = [{\n  field: 'name',\n  headerName: 'Name',\n  width: 500\n}, {\n  field: 'createDate',\n  headerName: 'Created Date',\n  width: 130\n}, {\n  field: 'url',\n  headerName: 'Github Repo Url',\n  width: 200\n}]; // const rows = [\n//   { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\n//   { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\n//   { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\n//   { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\n//   { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\n//   { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\n//   { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\n//   { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\n//   { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\n// ];\n\nexport default function ListComponent(data) {\n  _s();\n\n  var _data$data;\n\n  const [open, setOpen] = React.useState(false);\n  const [row, setRow] = React.useState({});\n  const rows = data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.map((d, i) => Object.assign({\n    id: i,\n    name: d.name,\n    createDate: d.createdAt,\n    url: d.url\n  }));\n\n  const clicked = event => {\n    console.log(event);\n    setOpen(true);\n    setRow(event.row);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 400,\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: rows,\n        columns: columns,\n        pageSize: 5,\n        rowsPerPageOptions: [5],\n        onRowClick: clicked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      fullScreen: true,\n      open: open,\n      onClose: handleClose,\n      TransitionComponent: Transition,\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        sx: {\n          position: 'relative'\n        },\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            edge: \"start\",\n            color: \"inherit\",\n            onClick: handleClose,\n            \"aria-label\": \"close\",\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              ml: 2,\n              flex: 1\n            },\n            variant: \"h6\",\n            component: \"div\",\n            children: \"Sound\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            autoFocus: true,\n            color: \"inherit\",\n            onClick: handleClose,\n            children: \"save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: [/*#__PURE__*/_jsxDEV(ListItem, {\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"Repository Name\",\n            secondary: row.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"Created Date\",\n            secondary: row.createDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"Repository Url\",\n            secondary: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: row.url,\n              target: '_blank',\n              children: row.url\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 63\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ListComponent, \"ZLTO8U4YPO9wWaEL2RF7vXa+ViQ=\");\n\n_c3 = ListComponent;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Transition$React.forwardRef\");\n$RefreshReg$(_c2, \"Transition\");\n$RefreshReg$(_c3, \"ListComponent\");","map":{"version":3,"sources":["D:/React/repo-improv-main/repo-improv-main/src/route/List.jsx"],"names":["React","DataGrid","Button","Dialog","ListItemText","ListItem","List","Divider","AppBar","Toolbar","IconButton","Typography","CloseIcon","Slide","Link","Transition","forwardRef","props","ref","columns","field","headerName","width","ListComponent","data","open","setOpen","useState","row","setRow","rows","map","d","i","Object","assign","id","name","createDate","createdAt","url","clicked","event","console","log","handleClose","height","position","ml","flex"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport List from '@mui/material/List';\r\nimport Divider from '@mui/material/Divider';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Slide from '@mui/material/Slide';\r\nimport {Link} from 'react-router-dom'\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nconst columns = [\r\n  { field: 'name', headerName: 'Name', width: 500 },\r\n  { field: 'createDate', headerName: 'Created Date', width: 130 },\r\n  { field: 'url', headerName: 'Github Repo Url', width: 200 },\r\n];\r\n\r\n// const rows = [\r\n//   { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\r\n//   { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\r\n//   { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\r\n//   { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\r\n//   { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\r\n//   { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\r\n//   { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\r\n//   { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\r\n//   { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\r\n// ];\r\n\r\nexport default function ListComponent(data) {\r\n    const [open, setOpen] = React.useState(false)\r\n    const [row, setRow] = React.useState({})\r\n    const rows = data?.data?.map((d,i)=>Object.assign({\r\n        id:i,\r\n        name:d.name,\r\n        createDate:d.createdAt,\r\n        url:d.url\r\n    }))\r\n    const clicked = (event)=>{\r\n        console.log(event)\r\n      setOpen(true)\r\n      setRow(event.row)\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n      };\r\n    \r\n  return (\r\n    <>\r\n    <div style={{ height: 400, width: '100%' }}>\r\n      <DataGrid\r\n        rows={rows}\r\n        columns={columns}\r\n        pageSize={5}\r\n        rowsPerPageOptions={[5]}\r\n        onRowClick={clicked}\r\n      />\r\n    </div>\r\n    <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar sx={{ position: 'relative' }}>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography sx={{ ml: 2, flex: 1 }} variant=\"h6\" component=\"div\">\r\n              Sound\r\n            </Typography>\r\n            <Button autoFocus color=\"inherit\" onClick={handleClose}>\r\n              save\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <List>\r\n          <ListItem>\r\n            <ListItemText primary=\"Repository Name\" secondary={row.name} />\r\n          </ListItem>\r\n          <ListItem>\r\n            <ListItemText primary=\"Created Date\" secondary={row.createDate} />\r\n          </ListItem>\r\n          <ListItem>\r\n            <ListItemText primary=\"Repository Url\" secondary={<a href={row.url} target={'_blank'}>{row.url}</a>} />\r\n          </ListItem>\r\n        </List>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}