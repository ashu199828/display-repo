{"ast":null,"code":"var _HomeRepositoryNameQuery,\n    _jsxFileName = \"D:\\\\React\\\\repo-improv-main\\\\repo-improv-main\\\\src\\\\route\\\\Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { RelayEnvironmentProvider, loadQuery, usePreloadedQuery } from \"react-relay/hooks\";\nimport env from \"../RelayEnvironment\";\nimport { Button, Container, Box, Typography, Card, CardContent, CardActions, Link, // TextField,\n// InputAdornment,\n// Tooltip,\nCircularProgress } from \"@mui/material\";\nimport ListComponent from './List';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Suspense\n} = React;\nconst RepositoryNameQuery = _HomeRepositoryNameQuery !== void 0 ? _HomeRepositoryNameQuery : (_HomeRepositoryNameQuery = require(\"./__generated__/HomeRepositoryNameQuery.graphql\"), _HomeRepositoryNameQuery.hash && _HomeRepositoryNameQuery.hash !== \"4eefc8a216225692fcb60765fe4c6b4c\" && console.error(\"The definition of 'HomeRepositoryNameQuery' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\"), _HomeRepositoryNameQuery);\nconst preloadedQuery = loadQuery(env, RepositoryNameQuery, {\n  usr: localStorage.getItem(\"user\") // usr:\"ashu199828\"\n\n});\n\nfunction Home(props) {\n  _s();\n\n  var _data$user, _data$user$repositori;\n\n  const data = usePreloadedQuery(RepositoryNameQuery, props.preloadedQuery);\n\n  const signOut = () => {\n    localStorage.clear();\n    window.location = \"/\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"home\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: data ? /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            color: \"#757575\",\n            my: 5,\n            variant: \"h2\",\n            children: \"Repositories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            size: \"large\",\n            variant: \"text\",\n            onClick: signOut,\n            children: \"Sign Out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            flexWrap: \"wrap\",\n            justifyContent: \"space-between\",\n            alignItems: \"stretch\"\n          },\n          children: /*#__PURE__*/_jsxDEV(ListComponent, {\n            data: data === null || data === void 0 ? void 0 : (_data$user = data.user) === null || _data$user === void 0 ? void 0 : (_data$user$repositori = _data$user.repositories) === null || _data$user$repositori === void 0 ? void 0 : _data$user$repositori.nodes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"no data found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this)\n  }, 'user.displayname', false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"gOoAgDlVPdxEXFj+8uugLFK2myc=\", false, function () {\n  return [usePreloadedQuery];\n});\n\n_c = Home;\n\nfunction HomeRoot(props) {\n  return /*#__PURE__*/_jsxDEV(RelayEnvironmentProvider, {\n    environment: env,\n    children: /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          value: \"user.id\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: \"100vh\"\n        },\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n          color: \"inherit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Home, {\n        preloadedQuery: preloadedQuery\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = HomeRoot;\nexport default HomeRoot;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Home\");\n$RefreshReg$(_c2, \"HomeRoot\");","map":{"version":3,"sources":["D:/React/repo-improv-main/repo-improv-main/src/route/Home.jsx"],"names":["React","RelayEnvironmentProvider","loadQuery","usePreloadedQuery","env","Button","Container","Box","Typography","Card","CardContent","CardActions","Link","CircularProgress","ListComponent","Suspense","RepositoryNameQuery","preloadedQuery","usr","localStorage","getItem","Home","props","data","signOut","clear","window","location","display","flexDirection","justifyContent","alignItems","flexWrap","user","repositories","nodes","HomeRoot","value","height"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport graphql from \"babel-plugin-relay/macro\";\nimport {\n  RelayEnvironmentProvider,\n  loadQuery,\n  usePreloadedQuery,\n} from \"react-relay/hooks\";\nimport env from \"../RelayEnvironment\";\nimport {\n  Button,\n  Container,\n  Box,\n  Typography,\n  Card,\n  CardContent,\n  CardActions,\n  Link,\n  // TextField,\n  // InputAdornment,\n  // Tooltip,\n  CircularProgress,\n} from \"@mui/material\";\nimport ListComponent from './List'\nconst { Suspense } = React;\n\nconst RepositoryNameQuery = graphql`\n  query HomeRepositoryNameQuery($usr: String!) {\n    user(login: $usr) {\n      repositories(first: 100, orderBy: { field: CREATED_AT, direction: DESC }) {\n        nodes {\n          name\n          description\n          collaborators(first: 10) {\n            nodes {\n              name\n            }\n          }\n          issues(first: 10, orderBy: { field: CREATED_AT, direction: DESC }) {\n            nodes {\n              __typename\n            }\n          }\n          createdAt\n          url\n        }\n      }\n    }\n  }\n`;\n\nconst preloadedQuery = loadQuery(env, RepositoryNameQuery, {\n  usr: localStorage.getItem(\"user\"),\n  // usr:\"ashu199828\"\n});\n\nfunction Home(props) {\n  const data = usePreloadedQuery(RepositoryNameQuery, props.preloadedQuery);\n\n  const signOut = () => {\n    localStorage.clear();\n    window.location = \"/\";\n  };\n\n  return (\n    <div id=\"home\" key='user.displayname'>\n    <Container fluid>\n      {data ? (\n        <Box>\n         <Box sx={{display:\"flex\" ,  flexDirection:\"row\" , justifyContent:\"space-between\" , alignItems:\"center\" }}>\n         <Typography\n            color=\"#757575\"\n            my={5}\n            variant=\"h2\"\n          >\n            Repositories\n          </Typography>\n          <Button size=\"large\" variant=\"text\" onClick={signOut}>\n            Sign Out\n          </Button>\n         </Box>\n         <hr/>\n         <br />\n          <Box\n            sx={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              flexWrap: \"wrap\",\n              justifyContent: \"space-between\",\n              alignItems: \"stretch\",\n            }}\n          >\n            <ListComponent data={data?.user?.repositories?.nodes}/>\n            \n            {/* {data.user.repositories.nodes.map((data) => {\n              return (\n                <Card\n                  sx={{\n                    minWidth: 275,\n                    margin: 5,\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    flexWrap: \"wrap\",\n                  }}\n                >\n                  <CardContent>\n                    <Typography\n                      sx={{ fontSize: 14 }}\n                      color=\"text.secondary\"\n                      gutterBottom\n                    >\n                      Created on : {data.createdAt}\n                    </Typography>\n                    <Typography variant=\"h5\" component=\"div\">\n                      {data.name}\n                    </Typography>\n                    <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n                      <br />\n                      {data.description ? data.description : \"no description\"}\n                    </Typography>\n                    <Typography color=\"text.secondary\">\n                      {data.collaborators?data.collaborators:\"no collaborators\"}\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                    <Button>\n                      <Link underline=\"none\" href={data.url}>GitHub link</Link>\n                    </Button>\n                  </CardActions>\n                 \n                </Card>\n              );\n            })} */}\n          </Box>\n        </Box>\n      ) : (\n        <h1>no data found</h1>\n      )}\n    </Container>\n    </div>\n  );\n}\n\nfunction HomeRoot(props) {\n  return (\n    <RelayEnvironmentProvider environment={env}>\n      <Suspense\n        fallback={\n          <Box\n            sx={{\n              value: \"user.id\",\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              height: \"100vh\",\n            }}\n          >\n            <CircularProgress color=\"inherit\" />\n          </Box>\n        }\n      >\n        <Home preloadedQuery={preloadedQuery} />\n      </Suspense>\n    </RelayEnvironmentProvider>\n  );\n}\n\nexport default HomeRoot;\n"]},"metadata":{},"sourceType":"module"}