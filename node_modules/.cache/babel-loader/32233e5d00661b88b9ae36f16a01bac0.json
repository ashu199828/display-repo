{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\repo-improv-main\\\\repo-improv-main\\\\src\\\\context\\\\Token\\\\TokenState.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport TokenContext from \"./TokenContext\";\nimport { getAuth, signInWithPopup, GithubAuthProvider } from \"firebase/auth\";\nimport { initializeApp } from \"firebase/app\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TokenState = props => {\n  _s();\n\n  const [tokenValue, setTokenValue] = useState(\"\");\n  const [user, setUser] = useState(\"\");\n  const firebaseConfig = {\n    apiKey: \"AIzaSyDPWWVqKEJ6w3ZETTm9qB2BVY0stqOO4NA\",\n    authDomain: \"oauth-app-3e936.firebaseapp.com\",\n    projectId: \"oauth-app-3e936\",\n    storageBucket: \"oauth-app-3e936.appspot.com\",\n    messagingSenderId: \"855299737848\",\n    appId: \"1:855299737848:web:c40491641c94fea476d30d\",\n    measurementId: \"G-TLJR6WTSJP\"\n  }; // Initialize Firebase\n\n  const app = initializeApp(firebaseConfig);\n\n  const signInAuth = provider => {\n    const auth = getAuth(app);\n    signInWithPopup(auth, provider).then(result => {\n      // This gives you a GitHub Access Token. You can use it to access the GitHub API.\n      const credential = GithubAuthProvider.credentialFromResult(result);\n      const token = credential.accessToken; // console.log(token)\n\n      setTokenValue(token);\n      localStorage.setItem(\"token\", token); // The signed-in user info.\n\n      const user = result.user;\n      setUser(user);\n      console.log(user);\n      localStorage.setItem(\"user\", user.displayName);\n\n      if (user) {\n        window.location = '/home';\n      } else {\n        window.location = \"/\";\n      } // ...\n\n    }).catch(error => {\n      window.location = \"/\";\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(TokenContext.Provider, {\n    value: {\n      tokenValue,\n      signInAuth\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TokenState, \"o+9WYfSQklwB8Uvqu1iVaFAhtj0=\");\n\n_c = TokenState;\nexport default TokenState;\n\nvar _c;\n\n$RefreshReg$(_c, \"TokenState\");","map":{"version":3,"sources":["D:/React/repo-improv-main/repo-improv-main/src/context/Token/TokenState.js"],"names":["React","TokenContext","getAuth","signInWithPopup","GithubAuthProvider","initializeApp","useState","TokenState","props","tokenValue","setTokenValue","user","setUser","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","signInAuth","provider","auth","then","result","credential","credentialFromResult","token","accessToken","localStorage","setItem","console","log","displayName","window","location","catch","error","children"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,OAAT,EAAkBC,eAAlB,EAAmCC,kBAAnC,QAA6D,eAA7D;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAE1B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAMO,cAAc,GAAG;AACnBC,IAAAA,MAAM,EAAE,yCADW;AAEnBC,IAAAA,UAAU,EAAE,iCAFO;AAGnBC,IAAAA,SAAS,EAAE,iBAHQ;AAInBC,IAAAA,aAAa,EAAE,6BAJI;AAKnBC,IAAAA,iBAAiB,EAAE,cALA;AAMnBC,IAAAA,KAAK,EAAE,2CANY;AAOnBC,IAAAA,aAAa,EAAE;AAPI,GAAvB,CAL0B,CAe1B;;AACA,QAAMC,GAAG,GAAGhB,aAAa,CAACQ,cAAD,CAAzB;;AAEA,QAAMS,UAAU,GAAIC,QAAD,IAAc;AAC7B,UAAMC,IAAI,GAAGtB,OAAO,CAACmB,GAAD,CAApB;AACAlB,IAAAA,eAAe,CAACqB,IAAD,EAAOD,QAAP,CAAf,CACKE,IADL,CACWC,MAAD,IAAY;AAEd;AACA,YAAMC,UAAU,GAAGvB,kBAAkB,CAACwB,oBAAnB,CAAwCF,MAAxC,CAAnB;AACA,YAAMG,KAAK,GAAGF,UAAU,CAACG,WAAzB,CAJc,CAMd;;AAEApB,MAAAA,aAAa,CAACmB,KAAD,CAAb;AACAE,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,KAA9B,EATc,CAWd;;AACA,YAAMlB,IAAI,GAAGe,MAAM,CAACf,IAApB;AACAC,MAAAA,OAAO,CAACD,IAAD,CAAP;AAEAsB,MAAAA,OAAO,CAACC,GAAR,CAAYvB,IAAZ;AAEAoB,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BrB,IAAI,CAACwB,WAAlC;;AAEA,UAAIxB,IAAJ,EAAU;AACNyB,QAAAA,MAAM,CAACC,QAAP,GAAkB,OAAlB;AACH,OAFD,MAEO;AACHD,QAAAA,MAAM,CAACC,QAAP,GAAkB,GAAlB;AACH,OAvBa,CAwBd;;AACH,KA1BL,EA0BOC,KA1BP,CA0BcC,KAAD,IAAW;AAChBH,MAAAA,MAAM,CAACC,QAAP,GAAkB,GAAlB;AACH,KA5BL;AA6BH,GA/BD;;AAkCA,sBACI,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAE5B,MAAAA,UAAF;AAAca,MAAAA;AAAd,KAA9B;AAAA,cACKd,KAAK,CAACgC;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAzDD;;GAAMjC,U;;KAAAA,U;AA2DN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\nimport TokenContext from \"./TokenContext\";\nimport { getAuth, signInWithPopup, GithubAuthProvider } from \"firebase/auth\";\nimport { initializeApp } from \"firebase/app\";\nimport { useState } from \"react\";\n\nconst TokenState = (props) => {\n\n    const [tokenValue, setTokenValue] = useState(\"\")\n    const [user, setUser] = useState(\"\")\n\n    const firebaseConfig = {\n        apiKey: \"AIzaSyDPWWVqKEJ6w3ZETTm9qB2BVY0stqOO4NA\",\n        authDomain: \"oauth-app-3e936.firebaseapp.com\",\n        projectId: \"oauth-app-3e936\",\n        storageBucket: \"oauth-app-3e936.appspot.com\",\n        messagingSenderId: \"855299737848\",\n        appId: \"1:855299737848:web:c40491641c94fea476d30d\",\n        measurementId: \"G-TLJR6WTSJP\"\n    };\n\n    // Initialize Firebase\n    const app = initializeApp(firebaseConfig);\n\n    const signInAuth = (provider) => {\n        const auth = getAuth(app);\n        signInWithPopup(auth, provider)\n            .then((result) => {\n\n                // This gives you a GitHub Access Token. You can use it to access the GitHub API.\n                const credential = GithubAuthProvider.credentialFromResult(result);\n                const token = credential.accessToken;\n\n                // console.log(token)\n\n                setTokenValue(token);\n                localStorage.setItem(\"token\", token);\n\n                // The signed-in user info.\n                const user = result.user;\n                setUser(user)\n                \n                console.log(user)\n\n                localStorage.setItem(\"user\", user.displayName);\n\n                if (user) {\n                    window.location = '/home'\n                } else {\n                    window.location = \"/\";\n                }\n                // ...\n            }).catch((error) => {\n                window.location = \"/\";\n            });\n    }\n\n\n    return (\n        <TokenContext.Provider value={{ tokenValue, signInAuth }}>\n            {props.children}\n        </TokenContext.Provider>\n    )\n}\n\nexport default TokenState"]},"metadata":{},"sourceType":"module"}