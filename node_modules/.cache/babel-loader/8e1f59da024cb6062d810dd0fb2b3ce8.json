{"ast":null,"code":"async function FetchGraphQL(text, variables) {\n  const TOKEN = localStorage.getItem(\"token\");\n  console.log(TOKEN); // Fetch data from GitHub's GraphQL API:\n\n  const response = await fetch(\"https://api.github.com/graphql\", {\n    method: \"POST\",\n    headers: {\n      Authorization: `bearer  ${TOKEN}`,\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      query: text,\n      variables\n    })\n  }); // Get the response as JSON\n\n  return response.json();\n}\n\n_c = FetchGraphQL;\n\nasync function FetchUser(user) {\n  const TOKEN = localStorage.getItem(\"token\");\n  const response2 = await fetch(\"https://api.github.com/graphql\", {\n    method: \"GET\",\n    headers: {\n      Authorization: `bearer  ${TOKEN}`,\n      \"Content-Type\": \"application/json\"\n    }\n  }); // Get the response as JSON\n\n  return response2.json(user);\n}\n\n_c2 = FetchUser;\nexport default (FetchGraphQL, FetchUser);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FetchGraphQL\");\n$RefreshReg$(_c2, \"FetchUser\");","map":{"version":3,"sources":["D:/React/repo-improv-main/repo-improv-main/src/FetchGraphQL.jsx"],"names":["FetchGraphQL","text","variables","TOKEN","localStorage","getItem","console","log","response","fetch","method","headers","Authorization","body","JSON","stringify","query","json","FetchUser","user","response2"],"mappings":"AAAA,eAAeA,YAAf,CAA4BC,IAA5B,EAAkCC,SAAlC,EAA6C;AAC3C,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ,EAF2C,CAG3C;;AACA,QAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAD,EAAmC;AAC7DC,IAAAA,MAAM,EAAE,MADqD;AAE7DC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAG,WAAUT,KAAM,EADzB;AAEP,sBAAgB;AAFT,KAFoD;AAM7DU,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,MAAAA,KAAK,EAAEf,IADY;AAEnBC,MAAAA;AAFmB,KAAf;AANuD,GAAnC,CAA5B,CAJ2C,CAgB3C;;AACA,SAAOM,QAAQ,CAACS,IAAT,EAAP;AAGD;;KApBcjB,Y;;AAqBf,eAAekB,SAAf,CAAyBC,IAAzB,EAA+B;AAC7B,QAAMhB,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACF,QAAMe,SAAS,GAAG,MAAMX,KAAK,CAAC,gCAAD,EAAmC;AAC9DC,IAAAA,MAAM,EAAE,KADsD;AAE9DC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAG,WAAUT,KAAM,EADzB;AAEP,sBAAgB;AAFT;AAFqD,GAAnC,CAA7B,CAF+B,CAU/B;;AACA,SAAOiB,SAAS,CAACH,IAAV,CAAeE,IAAf,CAAP;AACC;;MAZcD,S;AAcf,gBAAgBlB,YAAY,EAACkB,SAA7B","sourcesContent":["async function FetchGraphQL(text, variables) {\n  const TOKEN = localStorage.getItem(\"token\");\n  console.log(TOKEN);\n  // Fetch data from GitHub's GraphQL API:\n  const response = await fetch(\"https://api.github.com/graphql\", {\n    method: \"POST\",\n    headers: {\n      Authorization: `bearer  ${TOKEN}`,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      query: text,\n      variables,\n    }),\n  });\n\n  // Get the response as JSON\n  return response.json();\n\n\n}\nasync function FetchUser(user) {\n  const TOKEN = localStorage.getItem(\"token\");\nconst response2 = await fetch(\"https://api.github.com/graphql\", {\n  method: \"GET\",\n  headers: {\n    Authorization: `bearer  ${TOKEN}`,\n    \"Content-Type\": \"application/json\",\n  },\n});\n\n// Get the response as JSON\nreturn response2.json(user);\n}\n\nexport default (FetchGraphQL,FetchUser);\n"]},"metadata":{},"sourceType":"module"}